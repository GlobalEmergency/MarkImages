generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DeaRecord {
  id                    Int                   @id @default(autoincrement())
  horaInicio            DateTime
  horaFinalizacion      DateTime
  correoElectronico     String
  nombre                String
  numeroProvisionalDea  Int
  tipoEstablecimiento   String
  titularidadLocal      String
  usoLocal              String
  titularidad           String
  propuestaDenominacion String
  tipoVia               String
  nombreVia             String
  numeroVia             String?
  complementoDireccion  String?
  codigoPostal          Int
  distrito              String
  latitud               Float
  longitud              Float
  horarioApertura       String
  aperturaLunesViernes  Int
  cierreLunesViernes    Int
  aperturaSabados       Int
  cierreSabados         Int
  aperturaDomingos      Int
  cierreDomingos        Int
  vigilante24h          String
  foto1                 String?
  foto2                 String?
  descripcionAcceso     String?
  comentarioLibre       String?
  gmTipoVia             String?
  gmNombreVia           String?
  gmNumero              String?
  gmCp                  String?
  gmDistrito            String?
  gmLat                 Float?
  gmLon                 Float?
  defTipoVia            String?
  defNombreVia          String?
  defNumero             String?
  defCp                 String?
  defDistrito           String?
  defLat                Float?
  defLon                Float?
  defCodDea             String?
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  addressValidation     DeaAddressValidation?
  deaCodes              DeaCode[]
  verificationSessions  VerificationSession[]

  @@map("dea_records")
}

model VerificationSession {
  id                      Int              @id @default(autoincrement())
  deaRecordId             Int              @map("dea_record_id")
  status                  String           @default("in_progress")
  currentStep             String           @default("dea_info") @map("current_step")
  stepData                Json?            @map("step_data")
  originalImageUrl        String?          @map("original_image_url")
  croppedImageUrl         String?          @map("cropped_image_url")
  processedImageUrl       String?          @map("processed_image_url")
  secondImageUrl          String?          @map("second_image_url")
  secondCroppedImageUrl   String?          @map("second_cropped_image_url")
  secondProcessedImageUrl String?          @map("second_processed_image_url")
  createdAt               DateTime         @default(now()) @map("created_at")
  updatedAt               DateTime         @updatedAt @map("updated_at")
  completedAt             DateTime?        @map("completed_at")
  arrowMarkers            ArrowMarker[]
  processedImages         ProcessedImage[]
  deaRecord               DeaRecord        @relation(fields: [deaRecordId], references: [id])

  @@map("verification_sessions")
}

model ArrowMarker {
  id                    Int                 @id @default(autoincrement())
  verificationSessionId Int                 @map("verification_session_id")
  imageNumber           Int                 @map("image_number")
  startX                Float               @map("start_x")
  startY                Float               @map("start_y")
  endX                  Float               @map("end_x")
  endY                  Float               @map("end_y")
  arrowColor            String              @default("#dc2626") @map("arrow_color")
  arrowWidth            Int                 @default(40) @map("arrow_width")
  createdAt             DateTime            @default(now()) @map("created_at")
  verificationSession   VerificationSession @relation(fields: [verificationSessionId], references: [id])

  @@map("arrow_markers")
}

model ProcessedImage {
  id                    Int                 @id @default(autoincrement())
  verificationSessionId Int                 @map("verification_session_id")
  originalFilename      String              @map("original_filename")
  processedFilename     String              @map("processed_filename")
  imageType             String              @map("image_type")
  fileSize              Int                 @map("file_size")
  dimensions            String
  createdAt             DateTime            @default(now()) @map("created_at")
  verificationSession   VerificationSession @relation(fields: [verificationSessionId], references: [id])

  @@map("processed_images")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model Distrito {
  id                Int                  @id @default(autoincrement())
  codigoDistrito    Int                  @unique @map("codigo_distrito")
  codigoTexto       String               @map("codigo_texto")
  nombre            String
  nombreNormalizado String               @map("nombre_normalizado")
  shapeLength       Float?               @map("shape_length")
  shapeArea         Float?               @map("shape_area")
  fechaAlta         DateTime?            @map("fecha_alta")
  fechaBaja         DateTime?            @map("fecha_baja")
  observaciones     String?
  createdAt         DateTime             @default(now()) @map("created_at")
  barrios           Barrio[]
  direcciones       Direccion[]
  viaRangos         ViaRangoNumeracion[]

  @@index([codigoDistrito])
  @@index([nombreNormalizado])
  @@map("distritos")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model Barrio {
  id                   Int                  @id @default(autoincrement())
  distritoId           Int                  @map("distrito_id")
  codigoBarrio         Int                  @map("codigo_barrio")
  codigoDistritoBarrio Int                  @unique @map("codigo_distrito_barrio")
  numeroBarrio         Int                  @map("numero_barrio")
  nombre               String
  nombreNormalizado    String               @map("nombre_normalizado")
  nombreMayuscula      String               @map("nombre_mayuscula")
  shapeLength          Float?               @map("shape_length")
  shapeArea            Float?               @map("shape_area")
  fechaAlta            DateTime?            @map("fecha_alta")
  fechaBaja            DateTime?            @map("fecha_baja")
  createdAt            DateTime             @default(now()) @map("created_at")
  distrito             Distrito             @relation(fields: [distritoId], references: [id], onDelete: Cascade)
  direcciones          Direccion[]
  viaRangos            ViaRangoNumeracion[]

  @@index([distritoId, codigoBarrio])
  @@index([nombreNormalizado])
  @@map("barrios")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model Via {
  id                Int                  @id @default(autoincrement())
  codigoVia         Int                  @unique @map("codigo_via")
  claseVia          String               @map("clase_via")
  particula         String?
  nombre            String
  nombreConAcentos  String               @map("nombre_con_acentos")
  nombreNormalizado String               @map("nombre_normalizado")
  codigoViaInicio   Int?                 @map("codigo_via_inicio")
  claseInicio       String?              @map("clase_inicio")
  particulaInicio   String?              @map("particula_inicio")
  nombreInicio      String?              @map("nombre_inicio")
  codigoViaFin      Int?                 @map("codigo_via_fin")
  claseFin          String?              @map("clase_fin")
  particulaFin      String?              @map("particula_fin")
  nombreFin         String?              @map("nombre_fin")
  createdAt         DateTime             @default(now()) @map("created_at")
  direcciones       Direccion[]
  rangosNumeracion  ViaRangoNumeracion[]

  @@index([codigoVia])
  @@index([claseVia])
  @@index([nombreNormalizado])
  @@index([codigoViaInicio])
  @@index([codigoViaFin])
  @@map("vias")
}

model ViaRangoNumeracion {
  id             Int      @id @default(autoincrement())
  viaId          Int      @map("via_id")
  distritoId     Int      @map("distrito_id")
  barrioId       Int?     @map("barrio_id")
  numeroImparMin Int?     @map("numero_impar_min")
  numeroImparMax Int?     @map("numero_impar_max")
  numeroParMin   Int?     @map("numero_par_min")
  numeroParMax   Int?     @map("numero_par_max")
  createdAt      DateTime @default(now()) @map("created_at")
  barrio         Barrio?  @relation(fields: [barrioId], references: [id])
  distrito       Distrito @relation(fields: [distritoId], references: [id])
  via            Via      @relation(fields: [viaId], references: [id], onDelete: Cascade)

  @@index([viaId, distritoId])
  @@index([numeroImparMin, numeroImparMax])
  @@index([numeroParMin, numeroParMax])
  @@index([viaId, distritoId, barrioId])
  @@map("via_rangos_numeracion")
}

model Direccion {
  id               Int      @id @default(autoincrement())
  viaId            Int      @map("via_id")
  distritoId       Int      @map("distrito_id")
  barrioId         Int?     @map("barrio_id")
  claseAplicacion  String?  @map("clase_aplicacion")
  numero           Int?
  calificador      String?
  tipoPunto        String?  @map("tipo_punto")
  codigoPunto      Int?     @map("codigo_punto")
  codigoPostal     String?  @map("codigo_postal")
  latitud          Float
  longitud         Float
  utmXEtrs         Float?   @map("utm_x_etrs")
  utmYEtrs         Float?   @map("utm_y_etrs")
  utmXEd           Float?   @map("utm_x_ed")
  utmYEd           Float?   @map("utm_y_ed")
  anguloRotulacion Float?   @map("angulo_rotulacion")
  createdAt        DateTime @default(now()) @map("created_at")
  barrio           Barrio?  @relation(fields: [barrioId], references: [id])
  distrito         Distrito @relation(fields: [distritoId], references: [id])
  via              Via      @relation(fields: [viaId], references: [id])

  @@index([viaId, numero])
  @@index([distritoId, barrioId])
  @@index([codigoPostal])
  @@index([latitud, longitud])
  @@index([viaId, distritoId, numero, codigoPostal])
  @@index([latitud, longitud], map: "idx_direcciones_spatial")
  @@map("direcciones")
}

model DeaCode {
  id             Int        @id @default(autoincrement())
  distrito       Int
  codigoPostal   String     @map("codigo_postal")
  secuencial     Int
  codigoCompleto String     @unique @map("codigo_completo")
  deaRecordId    Int?       @map("dea_record_id")
  createdAt      DateTime   @default(now()) @map("created_at")
  deaRecord      DeaRecord? @relation(fields: [deaRecordId], references: [id])

  @@unique([distrito, secuencial])
  @@index([distrito])
  @@index([codigoCompleto])
  @@map("dea_codes")
}

model DeaAddressValidation {
  id                   Int       @id @default(autoincrement())
  deaRecordId          Int       @unique @map("dea_record_id")
  searchResults        Json      @default("[]") @map("search_results")
  validationDetails    Json?     @map("validation_details")
  overallStatus        String    @default("pending") @map("overall_status")
  recommendedActions   Json      @default("[]") @map("recommended_actions")
  processedAt          DateTime  @default(now()) @map("processed_at")
  processingDurationMs Int?      @map("processing_duration_ms")
  searchStrategiesUsed Json      @default("[]") @map("search_strategies_used")
  validationVersion    String    @default("1.0") @map("validation_version")
  needsReprocessing    Boolean   @default(true) @map("needs_reprocessing")
  errorMessage         String?   @map("error_message")
  retryCount           Int       @default(0) @map("retry_count")
  createdAt            DateTime  @default(now()) @map("created_at")
  updatedAt            DateTime  @updatedAt @map("updated_at")
  deaRecord            DeaRecord @relation(fields: [deaRecordId], references: [id], onDelete: Cascade)

  @@index([overallStatus])
  @@index([needsReprocessing])
  @@index([processedAt])
  @@index([validationVersion])
  @@map("dea_address_validations")
}
